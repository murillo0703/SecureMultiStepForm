CTO Directive for Full App Overhaul

Objective

To align the current build of the Employer Onboarding App with the comprehensive product vision and correct all structural, functional, and UX/UI inconsistencies, this directive outlines both major and minor development action items.

‚∏ª

üîß TECHNICAL OVERHAUL INSTRUCTIONS

1. UI + UX Standardization
	‚Ä¢	Two-Panel Layout Enforcement:
	‚Ä¢	Ensure all primary pages (including enrollment and admin views) use a consistent two-panel layout:
	‚Ä¢	Left: TOC (Table of Contents)
	‚Ä¢	Right: Dynamic content window
	‚Ä¢	Pages not in compliance:
	‚Ä¢	enrollment/company-info.tsx
	‚Ä¢	broker-dashboard.tsx
	‚Ä¢	ownership-info-fixed.tsx
	‚Ä¢	Update progress-sidebar.tsx to universally support this layout.
	‚Ä¢	Role Switcher Implementation:
	‚Ä¢	Enable in-app switching between Admin, Broker, and Employer roles.
	‚Ä¢	Broker/admin dashboards should display a persistent toggle.
	‚Ä¢	The backend must respect access levels with middleware/auth guards.
	‚Ä¢	Sticky Progress Navigation:
	‚Ä¢	Add a sticky top progress bar to all enrollment pages to allow users to jump between steps.

‚∏ª

2. COMPONENT + FILE STRUCTURE CLEANUP
	‚Ä¢	Merge Duplicates:
	‚Ä¢	Merge review-submit.tsx, review-submit-clean.tsx, and review-submit-fixed.tsx into one definitive component.
	‚Ä¢	Eliminate company-info.tsx in favor of the more feature-complete company-information.tsx.
	‚Ä¢	Document Upload Refactor:
	‚Ä¢	Ensure conditional logic for document upload is clearly enforced via smart-document-upload.tsx and document-uploader.tsx.
	‚Ä¢	Integrate file types, validation, and preview within the uploader.
	‚Ä¢	Admin override logic should display upon unmet requirements.

‚∏ª

3. FORM LOGIC + DATA FLOW
	‚Ä¢	Auto-Fill Owner Info:
	‚Ä¢	If ‚ÄúInitiator‚Äù selects role as ‚ÄúOwner,‚Äù auto-populate ownership fields in ownership-info-fixed.tsx.
	‚Ä¢	Fix Field Persistence:
	‚Ä¢	Ensure that multi-step forms save all data reliably.
	‚Ä¢	Fields are dropping values between steps. Fix use-multistep-form.tsx and autosave logic accordingly.
	‚Ä¢	Improved Input Feedback:
	‚Ä¢	Add inline error messages and visual confirmation states to form fields.
	‚Ä¢	Enhance UX with success state toast or light animation after major form checkpoints.

‚∏ª

4. ADMIN + BROKER DASHBOARDS
	‚Ä¢	Dashboard Sync:
	‚Ä¢	Audit broker-dashboard.tsx and admin/control-center.tsx to confirm they reference and reflect the same group and plan data.
	‚Ä¢	Ensure plan upload and document override tools are only available on admin views.
	‚Ä¢	PDF Template Mapping:
	‚Ä¢	Review pdf-form-generator.tsx and pdf-templates.tsx.
	‚Ä¢	Confirm mapped fields match onboarding input field names.
	‚Ä¢	Fix template loading errors and allow dynamic selection per carrier.
	‚Ä¢	Plan Upload Enhancements:
	‚Ä¢	In plan-upload.tsx, ensure plans are sorted by carrier, date, and metal tier.
	‚Ä¢	Allow filtering and archiving old plans.

‚∏ª

5. SECURITY + STABILITY
	‚Ä¢	Email Verification Completion:
	‚Ä¢	Complete 6-digit verification via SendGrid or Resend API.
	‚Ä¢	Verify registration and contact email fields with real-time validation.
	‚Ä¢	Signature Pad Reliability:
	‚Ä¢	Test signature-pad.tsx for mobile responsiveness.
	‚Ä¢	Ensure drawing persists and converts to base64 for submission.
	‚Ä¢	Fix File Upload Limits:
	‚Ä¢	file-upload.tsx must enforce file size and type restrictions.
	‚Ä¢	Display warnings before upload is attempted.

‚∏ª

6. HOOKS + REFACTORING
	‚Ä¢	Audit Hooks:
	‚Ä¢	Review use-auth.tsx, use-multistep-form.tsx, use-autosave.tsx, use-document-validation.tsx
	‚Ä¢	Improve logic cohesion between autosave and multi-step progress.
	‚Ä¢	Ensure use-toast.ts provides consistent alerts for user flow checkpoints.

‚∏ª

7. FUTURE EXPANSION SUPPORT (Scaffold Now)
	‚Ä¢	Role-Specific Pages:
	‚Ä¢	Add placeholders for Employee Dashboard, Renewal Center, Policy Review, and CRM activity feed.
	‚Ä¢	Navigation Engine:
	‚Ä¢	Ensure navigation-menu.tsx and sidebar.tsx can dynamically load nav items by role and context.
	‚Ä¢	Design System:
	‚Ä¢	Centralize color, font, spacing, and components via Tailwind config and theme-provider.tsx

‚∏ª

‚úÖ Replit Prompt Block

Update the SecureMultiStepForm app to:

1. Enforce a consistent two-panel layout across all user roles and enrollment steps
2. Refactor or merge duplicate files: 
   - Combine `review-submit.tsx`, `review-submit-clean.tsx`, `review-submit-fixed.tsx`
   - Remove `company-info.tsx`, use `company-information.tsx`
3. Fix field save issues in `use-multistep-form.tsx` and autosave hook
4. Implement email verification via SendGrid or Resend
5. Fix file upload size/type limits with warnings in `file-upload.tsx`
6. Build proper routing to support role switching between Admin, Broker, Employer
7. Add sticky top progress bar to enrollment layout
8. Ensure form inputs provide real-time feedback, success state visuals, and inline errors
9. Complete `pdf-form-generator.tsx` to work with mapped fields and upload logic
10. Finish Admin Panel with: plan filtering, invoice logs, and document override visibility
11. Support future expansion by wiring in `navigation-menu.tsx` and dashboard scaffolds for CRM and renewal modules


‚∏ª

VC Summary

This directive ensures a robust foundation while aggressively cleaning code and setting the groundwork for modular, enterprise-level expansion.

Next Step: Submit full directive and Replit prompt to your build environment for implementation. We‚Äôll perform regression QA and track fixes post-merge.